{ config, pkgs, modulesPath, inputs, outputs, ... }:

{
  imports = [
    # Autogenerated configuration specific to the iso, and not included in repo
    (modulesPath + "/virtualisation/proxmox-lxc.nix")
    ../../secrets
  ];

  extra-services.tailscale = {
    enable = true;
    lxc = true;
  };

  # sops secrets configuration
  sops.secrets."immich-secrets" = {
    # sopsFile = ../../secrets/secrets.yaml;
    owner = "immich";
    group = "immich";
    mode = "0400";
  };

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;

  extra-services.mount_home_media.enable = true;

  # # Create necessary directories
  systemd.tmpfiles.rules = [
    "d /mnt/home_media 0755 root root -"
    "Z /mnt/home_media/immich 0750 immich immich -"
  ];

  # Immich service configuration
  services.immich = {
    enable = true;
    package = inputs.nixpkgs-unstable.legacyPackages.${pkgs.system}.immich;
    host = "0.0.0.0";
    port = 2283;
    openFirewall = true;
    mediaLocation = "/mnt/home_media/immich";
    accelerationDevices = null;
    # secretsFile = config.sops.secrets."immich-secrets".path;
    environment = {
      TZ = "America/New_York";
    };
    settings = {
      #server.externalDomain = "";
      newVersionCheck.enabled = true;
    };

    database = {
      enable = true;
      createDB = true;
    };
  };

  # Fix permissions on existing database
  systemd.services.immich-fix-db-permissions = {
    description = "Fix Immich database permissions";
    after = [ "postgresql.service" ];
    before = [ "immich-server.service" ];
    wantedBy = [ "multi-user.target" ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      User = "postgres";
    };
    script = ''
      # Grant all privileges to immich user on existing database
      ${pkgs.postgresql}/bin/psql -d immich -c "GRANT ALL PRIVILEGES ON DATABASE immich TO immich;" || true
      ${pkgs.postgresql}/bin/psql -d immich -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO immich;" || true
      ${pkgs.postgresql}/bin/psql -d immich -c "GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO immich;" || true
      ${pkgs.postgresql}/bin/psql -d immich -c "ALTER DATABASE immich OWNER TO immich;" || true
      ${pkgs.postgresql}/bin/psql -d immich -c "ALTER SCHEMA public OWNER TO immich;" || true
    '';
  };

  # Add immich user to video and render groups for hardware acceleration
  users.users.immich.extraGroups = [ "video" "render" ];

  # Enable hardware acceleration support
  hardware.graphics = {
    enable = true;
    extraPackages = with pkgs; [
      intel-media-driver
      vaapiIntel
      vaapiVdpau
      libvdpau-va-gl
    ];
  };

  # networking.firewall.allowedTCPPorts = [ 2283 ];

  system.stateVersion = "25.05";
}