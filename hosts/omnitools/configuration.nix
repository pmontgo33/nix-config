{ pkgs, modulesPath, inputs, outputs, ... }:
{
  imports = [
    # Autogenerated configuration specific to the iso, and not included in repo
    (modulesPath + "/virtualisation/proxmox-lxc.nix")
    ../../secrets
  ];

  environment.systemPackages = with pkgs; [
    podman
    podman-compose
    curl  # For health checks
  ];

  extra-services.tailscale.enable = true;
  services.openssh.enable = true;

  # Enable container runtime support BEFORE defining containers
  virtualisation.containers.enable = true;

  # Enable Podman
  virtualisation.podman = {
    enable = true;
    # Enable Docker compatibility layer (optional)
    dockerCompat = true;
    # Required for container networking
    defaultNetwork.settings.dns_enabled = true;
  };

  # Enable OCI containers with Podman backend
  virtualisation.oci-containers = {
    backend = "podman";
    containers = {
      omni-tools = {
        image = "iib0011/omni-tools:latest";
        autoStart = true;
        # Port mapping: host:container
        ports = [
          "8080:80"
        ];
        # Remove restart policy from extraOptions as it conflicts with NixOS's --rm flag
        # The autoStart = true already handles restarting the container
        extraOptions = [
          "--pull=always"  # Ensure latest image is pulled
        ];
        # Optional: Environment variables (if needed)
        environment = {
          # Add any environment variables here if required
          # EXAMPLE_VAR = "value";
        };
        # Optional: Volume mounts for persistent data
        volumes = [
          # Uncomment and modify if you need persistent storage
          # "/var/lib/omni-tools:/app/data:rw"
        ];
      };
    };
  };

  # Open firewall port for web access
  networking.firewall.allowedTCPPorts = [ 8080 ];

  system.stateVersion = "25.05";
}